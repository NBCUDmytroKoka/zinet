################################################
#	Copyright (c) 2015-18 zibernetics, Inc.
#
#	Licensed under the Apache License, Version 2.0 (the "License");
#	you may not use this file except in compliance with the License.
#	You may obtain a copy of the License at
#	
#	    http://www.apache.org/licenses/LICENSE-2.0
#	
#	Unless required by applicable law or agreed to in writing, software
#	distributed under the License is distributed on an "AS IS" BASIS,
#	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#	See the License for the specific language governing permissions and
#	limitations under the License.
#
################################################

# This command sets replication domain settings

for xInstanceName in ${localReplicationDomainList}; do
    xInstanceSettings=${OPENDJ_REPL_SVR_CFG[$xInstanceName]}
    [ -z "${xInstanceSettings}" ] && continue
    IFS=',' read -ra xInstanceArr <<< "${xInstanceSettings}"

	baseDN=${OPENDJ_BASE_DNS[$xInstanceName]}
    [ -z "${baseDN}" ] && continue

    setDirectives=
    sProviderName="Multimaster Synchronization"
    sProviderNameQ="'Multimaster Synchronization'"

    for g in "${xInstanceArr[@]}"; do
        key=${g%%=*}
        value=${g#*=}

        case "$key" in
            provider-name)
                [[ "${value}" != "${value% *}" ]] && \
                sProviderNameQ="'${value}'" || \
                sProviderNameQ="${value}"

                sProviderName="${value}"
                ;;
            *)
                [[ "${value}" != "${value% *}" ]] && \
                setDirectives="${setDirectives} --set ${key}:'${value}'" || \
                setDirectives="${setDirectives} --set ${key}:${value}"
                ;;
        esac
    done

    if [ ! -z "${setDirectives}" ]; then
        existingProps=$(${OPENDJ_HOME_DIR}/bin/dsconfig get-replication-server-prop \
                            --hostname ${localTargetHost}                           \
                            --port ${OPENDJ_ADMIN_PORT}                             \
                            --bindDN "${localLDAPBindDN}"                           \
                            --bindPassword ${localLDAPBindPW}                       \
                            --provider-name "${sProviderName}" -E --trustAll | grep -v -e "^Property" -e "^-" -e "does not exist" -e "Unable to continue")
        [ -z "${existingProps}" ] && subOption=create-replication-server || subOption=set-replication-server-prop

        tmpfile=$(mktemp /tmp/.XXXXXXXXXXXX)

        echo
        cat <<- EOF > ${tmpfile}
        echo "#### ${xInstanceName} ==> ${subOption} - ${sProviderName} / ${baseDN}"
        ${OPENDJ_HOME_DIR}/bin/dsconfig ${subOption}    \
        --hostname ${localTargetHost}                   \
        --port ${OPENDJ_ADMIN_PORT}                     \
        --bindDN "${localLDAPBindDN}"                   \
        --bindPassword ${localLDAPBindPW}               \
        --provider-name ${sProviderNameQ}               \
        $setDirectives                                  \
        --trustAll                                      \
        --no-prompt
		EOF

        source ${tmpfile}
        if [ $? -eq 0 ]; then
            ${OPENDJ_HOME_DIR}/bin/dsconfig get-replication-domain-prop \
            --hostname ${localTargetHost}                           \
            --port ${OPENDJ_ADMIN_PORT}                             \
            --bindDN "${localLDAPBindDN}"                           \
            --bindPassword ${localLDAPBindPW}                       \
            --provider-name "${sProviderName}" --domain-name "${baseDN}" -E --trustAll

            rm ${tmpfile}
        else
            echo "#### ERROR EXECUTING ${xInstanceName} ==> ${subOption} - ${sProviderName} / ${baseDN}"
            rm ${tmpfile}
            return 1
        fi
    else
        echo "#### Error: no domain replication settings were found"
    fi

done
